- name: catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable default Node.js module
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y #why .shell, in notes

  - name: Install node js
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop user
    ansible.builtin.user: 
     name: roboshop

  - name: Recursively remove /app directory # deleting app directory if already exists: to avoid error 
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download application code inside app directory
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Unzip/extract catalogue.zip /catalogue application
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip 
      dest: /app
      remote_src: yes # stating that zip file is availabe in catalogue server==remote server. (not it ansible server)

  - name: install npm dependencies in /app
    ansible.builtin.command: npm install # --> telling to install npm ( we can use both shell or command )
    args:
      chdir: /app # these 2 lines (args: & chdir: ) are == cd app (changing directory to /app)

  - name: copying catalogue.service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: loading the service - daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

    #we are suppose to enable and start daemon here, but before that we are loading some data first because there are some chances to get error. 

  - name: copying mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present  # with this task, we installed mongodb client in catalogue server.

      #next task is loading schema : 
      # once we load the schema data, and run the same thing again (loading data) we get error saying that duplicate keys. 
    
  - name: get the catogories count
    ansible.builtin.command: mongo --host mongodb.adityakonada.site --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count
    #this command is == checking the catalogue.js file in catalogue server > cd /app/schema > cat catalogue.js (contains the default products) 
    #db.products.count() == checks how many products are there in it. 
  - name: print the count
    ansible.builtin.debug:
      msg: "product count is {{product_count}}"

  - name: loading data into catalogue
    ansible.builtin.command: mongo --host mongodb.adityakonada.site < /app/schema/catalogue.js 
    when: product_count.stdout == "0" # product)count.stdout is from json i.e, from output
    # this task is saying to load schema only if there are no product counts, skip if already loaded to avoid duplicate keys error. 
    #note: space between < /app is imp (typo error in documentation)

  - name: enabling and starting catalogue service 
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
# now we are enabling & starting the catalogue service that should happen in line 43 - in daemon reload task



